--file D:\GitHub\ABZ 2025\abz2025_casestudy_autonomous_driving\asmeta spec\models\SafetyEnforcerFaster.smv
-- options: flatten? false
MODULE main
	VAR
		a_max: real; --controlled
		actual_distance_contr: real; --controlled
		b_max: real; --controlled
		b_min: real; --controlled
		currentAgentAction: {ACTIONS_UNDEF, FASTER, IDLE, LANE_LEFT, LANE_RIGHT, SLOWER}; --controlled
		dRSS_contr: real; --controlled
		inputAction: {ACTIONS_UNDEF, FASTER, IDLE, LANE_LEFT, LANE_RIGHT, SLOWER}; --monitored
		l_vehicle: real; --controlled
		outAction: {ACTIONS_UNDEF, FASTER, IDLE, LANE_LEFT, LANE_RIGHT, SLOWER}; --controlled
		resp_time: real; --controlled
		v_front: real; --monitored
		v_self: real; --monitored
		x_front: real; --monitored
		x_self: real; --monitored
	DEFINE
		actual_distance := ((x_front - x_self) - l_vehicle);
		current_max_acc :=
			case
				!(v_self = v_max): a_max;
				(v_self = v_max): 0.0;
				TRUE: 0.0;
			esac;
		dRSS := (case 0.0 >= ((((v_self * resp_time) + ((0.5 * current_max_acc) * (resp_time * resp_time))) + (((v_self + (resp_time * current_max_acc)) * (v_self + (resp_time * current_max_acc))) / (2.0 * b_min))) - ((v_front * v_front) / (2.0 * b_max))) : 0.0; TRUE: (((((v_self * resp_time) + ((0.5 * current_max_acc) * (resp_time * resp_time))) + (((v_self + (resp_time * current_max_acc)) * (v_self + (resp_time * current_max_acc))) / (2.0 * b_min))) - ((v_front * v_front) / (2.0 * b_max)))); esac);
		gofast_perc := 1.7;
		v_max := 40.0;
	CONSTANTS ACTIONS_UNDEF, FASTER, IDLE, LANE_LEFT, LANE_RIGHT, SLOWER;
	ASSIGN
		init(a_max) := 5.0;
		init(b_max) := 5.0;
		init(b_min) := 3.0;
		init(currentAgentAction) := ACTIONS_UNDEF;
		init(l_vehicle) := 5.0;
		init(outAction) := ACTIONS_UNDEF;
		init(resp_time) := 1.0;
		next(a_max) := a_max;
		next(actual_distance_contr) := actual_distance;
		next(b_max) := b_max;
		next(b_min) := b_min;
		next(currentAgentAction) := inputAction;
		next(dRSS_contr) := dRSS;
		next(l_vehicle) := l_vehicle;
		next(outAction) :=
			case
				(TRUE & (actual_distance > (dRSS * gofast_perc))): FASTER;
				(TRUE & (actual_distance <= dRSS)): SLOWER;
				(TRUE & ((actual_distance > dRSS) & (actual_distance <= (dRSS * gofast_perc)))): inputAction;
				TRUE: outAction;
			esac;
		next(resp_time) := resp_time;
--INVARSPEC properties
INVARSPEC NAME invar_01 := (actual_distance<=dRSS) -> next(outAction=SLOWER)
INVARSPEC NAME invar_02 := (actual_distance>(dRSS*gofast_perc)) -> next(outAction=FASTER)
INVARSPEC NAME invar_03 := (actual_distance>dRSS & actual_distance<=(dRSS*gofast_perc)) -> next(outAction=currentAgentAction)