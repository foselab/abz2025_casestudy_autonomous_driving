--file D:\AgHome\progettidaSVNGIT\ricerca\abz2025_casestudy_autonomous_driving\asmeta spec\models\SafetyEnforcerNF.smv
-- options: flatten? false
MODULE main
	VAR
		a_max: real; --controlled
		b_max: real; --controlled
		b_min: real; --controlled
		currentAgentAction: {ACTIONS_UNDEF, FASTER, IDLE, LANE_LEFT, LANE_RIGHT, SLOWER}; --controlled
		inputAction: {ACTIONS_UNDEF, FASTER, IDLE, LANE_LEFT, LANE_RIGHT, SLOWER}; --monitored
		l_vehicle: real; --controlled
		outAction: {ACTIONS_UNDEF, FASTER, IDLE, LANE_LEFT, LANE_RIGHT, SLOWER}; --controlled
		resp_time: real; --controlled
		v_front: real; --monitored
		v_self: real; --monitored
		x_front: real; --monitored
		x_self: real; --monitored
	DEFINE
	CONSTANTS ACTIONS_UNDEF, FASTER, IDLE, LANE_LEFT, LANE_RIGHT, SLOWER;
	ASSIGN
		init(a_max) := 5.0;
		init(b_max) := 5.0;
		init(b_min) := 3.0;
		init(currentAgentAction) := ACTIONS_UNDEF;
		init(l_vehicle) := 5.0;
		init(outAction) := ACTIONS_UNDEF;
		init(resp_time) := 1.0;
		next(a_max) := a_max;
		next(b_max) := b_max;
		next(b_min) := b_min;
		next(currentAgentAction) := inputAction;
		next(l_vehicle) := l_vehicle;
		next(outAction) :=
			case
				(((x_front - x_self) - l_vehicle) <= (case 0.0 >= ((((v_self * resp_time) + ((0.5 * a_max) * (resp_time * resp_time))) + (((v_self + (resp_time * a_max)) * (v_self + (resp_time * a_max))) / (2.0 * b_min))) - ((v_front * v_front) / (2.0 * b_max))) : 0.0; TRUE: (((((v_self * resp_time) + ((0.5 * a_max) * (resp_time * resp_time))) + (((v_self + (resp_time * a_max)) * (v_self + (resp_time * a_max))) / (2.0 * b_min))) - ((v_front * v_front) / (2.0 * b_max)))); esac)): SLOWER;
				((((x_front - x_self) - l_vehicle) > (case 0.0 >= ((((v_self * resp_time) + ((0.5 * a_max) * (resp_time * resp_time))) + (((v_self + (resp_time * a_max)) * (v_self + (resp_time * a_max))) / (2.0 * b_min))) - ((v_front * v_front) / (2.0 * b_max))) : 0.0; TRUE: (((((v_self * resp_time) + ((0.5 * a_max) * (resp_time * resp_time))) + (((v_self + (resp_time * a_max)) * (v_self + (resp_time * a_max))) / (2.0 * b_min))) - ((v_front * v_front) / (2.0 * b_max)))); esac)) & (((x_front - x_self) - l_vehicle) <= ((case 0.0 >= ((((v_self * resp_time) + ((0.5 * a_max) * (resp_time * resp_time))) + (((v_self + (resp_time * a_max)) * (v_self + (resp_time * a_max))) / (2.0 * b_min))) - ((v_front * v_front) / (2.0 * b_max))) : 0.0; TRUE: (((((v_self * resp_time) + ((0.5 * a_max) * (resp_time * resp_time))) + (((v_self + (resp_time * a_max)) * (v_self + (resp_time * a_max))) / (2.0 * b_min))) - ((v_front * v_front) / (2.0 * b_max)))); esac) * 1.7))): inputAction;
				(((x_front - x_self) - l_vehicle) > ((case 0.0 >= ((((v_self * resp_time) + ((0.5 * a_max) * (resp_time * resp_time))) + (((v_self + (resp_time * a_max)) * (v_self + (resp_time * a_max))) / (2.0 * b_min))) - ((v_front * v_front) / (2.0 * b_max))) : 0.0; TRUE: (((((v_self * resp_time) + ((0.5 * a_max) * (resp_time * resp_time))) + (((v_self + (resp_time * a_max)) * (v_self + (resp_time * a_max))) / (2.0 * b_min))) - ((v_front * v_front) / (2.0 * b_max)))); esac) * 1.7)): FASTER;
				TRUE: outAction;
			esac;
		next(resp_time) := resp_time;
--LTL properties
LTLSPEC NAME ltl0 := G(((((x_front - x_self) - l_vehicle) <= (case 0.0 >= ((((v_self * resp_time) + ((0.5 * a_max) * (resp_time * resp_time))) + (((v_self + (resp_time * a_max)) * (v_self + (resp_time * a_max))) / (2.0 * b_min))) - ((v_front * v_front) / (2.0 * b_max))) : 0.0; TRUE: (((((v_self * resp_time) + ((0.5 * a_max) * (resp_time * resp_time))) + (((v_self + (resp_time * a_max)) * (v_self + (resp_time * a_max))) / (2.0 * b_min))) - ((v_front * v_front) / (2.0 * b_max)))); esac)) -> X((outAction = SLOWER))));
